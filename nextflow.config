// Workflow details
manifest {
    
  author = ' Tracy Chew, Cali Willet, Nandan Deshpande, Sydney Informatics Hub, University of Sydney'
  name = 'SomaticShortV-nf'
  description = 'GATK somatic short variant calling pipeline'
  homePage = 'https://github.com/Sydney-Informatics-Hub/Somatic-shortV-nf'
    }

// Mandate a minimum version of nextflow required to run the pipeline
nextflowVersion     = '!>=20.07.1'

// Set default parameters
params {
  version                       = '1.0'
  help                          = false
  input                         = null
  ref                           = false
  intervals                     = false
  outDir		                    = './results'
  ponvcf                        = null
  small_exac_common             = ''
  intervalList_path             = ''
  intervalList                  = ['0001','0002','0003','0004','0005','0006','0007','0008','0009','0010','0011','0012','0013','0014','0015','0016','0017','0018','0019','0020','0021','0022','0023','0024','0025','0026','0027','0028','0029','0030','0031','0032','0033','0034','0035','0036','0037','0038','0039','0040','0041','0042','0043','0044','0045','0046','0047','0048','0049','0050']

  
  
  
  gadi_account       	= false
  setonix_account     = false
  whoami            	= false
}


// Preset use of containers with Singularity
singularity {
    enabled		    = false
    autoMounts		= true
    }

// Job profiles
profiles {
  local		{ includeConfig "config/local.config" }
  gadi		{ includeConfig "config/gadi.config" }
  }

// Fail a task if any command returns non-zero exit code
shell = ['/bin/bash', '-euo', 'pipefail']

// Resources for each process
// default run resource parameters
process {
  container = 'quay.io/biocontainers/gatk4:4.4.0.0--py36hdfd78af_0'

withName: 'mutect2' {
        cpus = 1
        memory = '20.GB'
    }

    withName: 'GatherVcfs' {
        cpus = 1
        memory = '20.GB'   
        }
 

    withName: 'MergeMutectStats' {
        cpus = 1
        memory = '20.GB'
        } 

    withName: 'LearnReadOrientationModel' {
        cpus = 1
        memory = '20.GB'
        } 

  withName: 'GetPileupSummaries_T' {
        cpus = 1
        memory = '20.GB'  
    } 

  withName: 'GetPileupSummaries_N' {
        cpus = 1
        memory = '20.GB' 
    } 

  withName: 'CalculateContamination' {
        cpus = 1
        memory = '20.GB'
    } 

  withName: 'FilterMutectCalls' {
        cpus = 1
        memory = '20.GB'
    } 

withName: 'getFilteredVariants' {
        cpus = 1
        memory = '20.GB' 
} 

}

// Define timestamp, to avoid overwriting existing trace
def timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

// Produce a workflow diagram
dag {
  enabled = true
  file = "${params.outDir}/runInfo/SomaticShortV_dag_${timestamp}.svg"
}

report {
  enabled = true
  file = "${params.outDir}/runInfo/SomaticShortV_report_${timestamp}.html"
}

timeline {
  enabled = true
	overwrite = true
	file = "${params.outDir}/runInfo/SomaticShortV_timeline_${timestamp}.html"
}

trace {
	enabled = true
	overwrite = true
  file = "${params.outDir}/runInfo/SomaticShortV_trace_${timestamp}.txt"
  fields = 'process,name,status,queue,realtime,cpus,%cpu,memory,%mem,rss,env'
}
